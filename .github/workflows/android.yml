name: "Android : Build & Upload to Firebase App Distribution 🤖"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  PACKAGE_INSTALLATION_ENV: 'github'
  NODE_VERSION: '16'
  JAVA_VERSION: '11'
  JAVA_ARCH: 'x64'
  JAVA_DIST: 'temurin'

  WORKING_DIRECTORY: examples/react-native-example

jobs:
  build:
    if: false
    timeout-minutes: 60
    defaults:
        run:
          working-directory: ${{ env.WORKING_DIRECTORY }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Print working directory 🖨️
        run: |
          ls -la ${{github.workspace}}
      - name: Set image version 🔂
        run: echo "ImageVersion=$ImageVersion" >> $GITHUB_ENV
      - name: Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Node cache ☊
        uses: actions/cache@v2.1.6
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-${{ env.ImageVersion }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.ImageVersion }}-node-
      - name: Install node modules 📦
        run: yarn install --frozen-lockfile
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
           distribution: ${{ env.JAVA_DIST }}
           java-version: ${{ env.JAVA_VERSION }}
      - name: Clean Gradle cache 🧹
        working-directory: ${{ env.WORKING_DIRECTORY }}/android
        run: ./gradlew clean
#      - name: Update Gradle lock 🔏
#        if: github.event_name == 'pull_request'
#        working-directory: ${{ env.WORKING_DIRECTORY }}/android
#        run: ./gradlew app:dependencies --write-locks
      - name: Build release 🏗️
        working-directory: ${{ env.WORKING_DIRECTORY }}/android
        run: |
            ./gradlew clean
            ./gradlew assembleRelease
      - name: Upload artifact to Firebase App Distribution 🔥
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_CREDENTIALS_PRO }}
          groups: testers
          # add commit message as release notes
          releaseNotes: ${{ github.event.head_commit.message || github.event.commits[0].message || github.event.pull_request.title || github.event.pull_request.head.ref }}
          file: ${{ env.WORKING_DIRECTORY }}/android/app/build/outputs/apk/release/app-release.apk
      - name: Upload e2e APK 🚀
        uses: actions/upload-artifact@v2
        with:
          name: android-e2e
          path: ${{ env.WORKING_DIRECTORY }}/android/app/build/outputs/apk/

  e2e:
    if: false
    needs: build
    # only macos supports hw virtualization
    # https://github.com/actions/virtual-environments/issues/183
    runs-on: macos-latest
    timeout-minutes: 60
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    env:
      api-level: 29
      target: google_apis
      avd-name: TestEmulator
      arch: x86
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install node modules 📦
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn install --frozen-lockfile
      - name: Install detox ⏳
        run: npm install -g detox-cli
      - name: Install react-native-cli ⏳
        run: npm install -g react-native-cli
      - name: Setup Java ☕️
        uses: actions/setup-java@v2
        with:
          cache: gradle
          distribution: ${{ env.JAVA_DIST }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Refresh detox ♻️
        run: |
          npx detox clean-framework-cache
          npx detox build-framework-cache
      - uses: gradle/wrapper-validation-action@v1
      - name: Cache Detox build 📦
        id: cache-detox-build
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/android/app/build
          key: ${{ runner.os }}-detox-build
          restore-keys: |
            ${{ runner.os }}-detox-build
      - name: Detox build 👷🏼‍♂️
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn detox build --configuration android.release
      - name: Get device name 🧾
        id: device
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: node -e "console.log('AVD_NAME=' + require('./.detoxrc.json').devices.emulator.device.avdName)" >> $GITHUB_OUTPUT
      - name: Detox test 🧪
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          api-level: ${{ env.api-level }}
          arch: ${{ env.arch }}
          avd-name: ${{ steps.device.outputs.AVD_NAME }}
          script: FRONT_CLIENT_ID=${{ secrets.FRONT_CLIENT_ID }} FRONT_CLIENT_SECRET=${{ secrets.FRONT_CLIENT_SECRET }} yarn e2e:android
      - name: Upload e2e logs 🪵
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: logs-e2e-android
          path: artifacts
